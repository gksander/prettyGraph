"use strict";var $,math,JXG,PG={tmp:{},board:"",els:{},currentConstruction:"",nInterval:null,currentEl:"",parser:math.parser()};PG.setN=function(newval){PG.vars.n=newval,$("#parameterN, #n_slider").val(PG.vars.n),$("#n_value").html(PG.vars.n.toFixed(2));try{PG.board.update()}catch(err){}},PG.setDefaults=function(vars){return{boardWidth:vars.boardWidth?vars.boardWidth:450,boardHeight:vars.boardHeight?vars.boardHeight:450,bounds:vars.bounds?vars.bounds:[-5,5,-5,5],xLabel:vars.xLabel?vars.xLabel:"$x$",yLabel:vars.yLabel?vars.yLabel:"$y$",ticksDistance:vars.ticksDistance?vars.ticksDistance:[1,1],piTicks:!!vars.piTicks&&vars.piTicks,minorTicks:vars.minorTicks?vars.minorTicks:[1,1],globalFontSize:vars.globalFontSize?vars.globalFontSize:20,axesThickness:vars.axesThickness?vars.axesThickness:2,axesColor:vars.axesColor?vars.axesColor:"000000",showXAxis:null!==vars.showXAxis?vars.showXAxis:1,showYAxis:null!==vars.showYAxis?vars.showYAxis:1,labelFontSize:vars.labelFontSize?vars.labelFontSize:22,n:vars.n!==undefined?vars.n:1,nMin:vars.nMin!==undefined?vars.nMin:-5,nMax:vars.nMax!==undefined?vars.nMax:5,nStep:vars.nStep!==undefined?vars.nStep:.1,nDuration:vars.nDuration!==undefined?vars.nDuration:5,declarations:vars.declarations?vars.declarations:""}},PG.getConstruction=function(cons){try{var constructions=JSON.parse(localStorage.PGconstructions),c=constructions[cons];PG.vars=PG.setDefaults(c.vars),PG.els=c.els}catch(err){PG.vars=PG.setDefaults({}),PG.els={}}PG.tmp={},PG.parser.clear(),$("#elementList").empty()},PG.loadConstruction=function(cons){$("#PGconstructionName").val(0!=cons?cons:""),$("#graphWidth").val(PG.vars.boardWidth),$("#graphHeight").val(PG.vars.boardHeight),$("#graphxMin").val(PG.vars.bounds[0]),$("#graphxMax").val(PG.vars.bounds[1]),$("#graphyMin").val(PG.vars.bounds[2]),$("#graphyMax").val(PG.vars.bounds[3]),$("#graphXTicksDistance").val(PG.vars.ticksDistance[0]),$("#graphYTicksDistance").val(PG.vars.ticksDistance[1]),$("#graphPiTicks").attr("checked",PG.vars.piTicks),$("#graphXMinorTicks").val(PG.vars.minorTicks[0]),$("#graphYMinorTicks").val(PG.vars.minorTicks[1]),$("#graphxLabel").val(PG.vars.xLabel),$("#graphyLabel").val(PG.vars.yLabel),$("#verticalyLabel").attr("checked",PG.vars.yLabelVertical),$("#graphAxesThickness").val(PG.vars.axesThickness?PG.vars.axesThickness:2),$("#graphAxesColor").val(PG.vars.axesColor?PG.vars.axesColor:"000000"),$("#graphShowXAxis").val(PG.vars.showXAxis),$("#graphShowYAxis").val(PG.vars.showYAxis),$("#graphLabelFontSize").val(PG.vars.labelFontSize),$("#n_slider").val(PG.vars.n).attr({min:PG.vars.nMin,max:PG.vars.nMax,step:PG.vars.nStep}),$("#parameterN").val(PG.vars.n),$("#parameterN_min").val(PG.vars.nMin),$("#parameterN_max").val(PG.vars.nMax),$("#parameterN_step").val(PG.vars.nStep),$("#parameterN_duration").val(PG.vars.nDuration),$("#declarations").val(PG.vars.declarations),PG.initBoard()},PG.loadConstructionList=function(toLoad){var constructions=JSON.parse(localStorage.PGconstructions),os="<option value='0'>New Construction</option>";for(var i in constructions)os+="<option value='"+i+"' "+(i==toLoad?"selected":"")+">"+i+"</option>";$("#PGconstructionSelectList").html(os)},PG.registerBoxEvents=function(){PG.board.on("boundingbox",function(){var bounds=PG.board.getBoundingBox(),xmin=bounds[0].toFixed(2),xmax=bounds[2].toFixed(2),ymin=bounds[3].toFixed(2),ymax=bounds[1].toFixed(2);PG.vars.bounds=[xmin,xmax,ymin,ymax],$("#graphxMin").val(xmin),$("#graphxMax").val(xmax),$("#graphyMin").val(ymin),$("#graphyMax").val(ymax)})},PG.elementOnDown=function(){var id=null;for(var i in PG.tmp)if(PG.tmp[i]===this){id=i;break}null!==id&&(PG.currentEl=id,PG.showStyles(id))},PG.showStyles=function(id){PG.currentEl=id;var type=PG.els[id]?PG.els[id].type:"";if($("#currentElement").html(""==type?"Select an Element":"(<i>"+type+"</i>) "+id),$("table#stylesTable tr").hide(),""==type)return!1;var toshow=[];switch(type){case"functiongraph":toshow=["strokeWidth","strokeColor","dash","visible"];break;case"curve":toshow=["strokeColor","strokeWidth","dash","visible"];break;case"text":toshow=["fontSize","color","anchorX","anchorY","visible"];break;case"point":toshow=["size","name","color","visible"];break;case"line":toshow=["strokeWidth","strokeColor","dash","arrow","ends","visible"];break;case"circle":toshow=["strokeWidth","strokeColor","fillColor","fillOpacity","dash","visible"];break;case"polygon":toshow=["strokeWidth","strokeColor","fillColor","fillOpacity","visible"]}for(var i in toshow)["strokeColor","color","fillColor"].indexOf(toshow[i])>-1?$("#style_"+toshow[i])[0].jscolor.fromString(PG.els[id][toshow[i]]):$("#style_"+toshow[i]).val(PG.els[id][toshow[i]]),$("#style_"+toshow[i]).closest("tr").show()},PG.saveConstruction=function(){if(PG.currentConstruction=$("#PGconstructionName").val(),""==PG.currentConstruction)return PG.modalMessage("Whoops!","Make sure you give your construction a name in the 'Save Construction As' section."),!1;localStorage.PGcurrentConstruction=PG.currentConstruction;var constructions=JSON.parse(localStorage.PGconstructions);constructions[PG.currentConstruction]={vars:PG.vars,els:PG.els},localStorage.PGconstructions=JSON.stringify(constructions),PG.loadConstructionList(PG.currentConstruction)},PG.deleteConstruction=function(){if(confirm("Are you sure you want to delete this construction?")){try{var constructions=JSON.parse(localStorage.PGconstructions);delete constructions[$("#PGconstructionName").val()],localStorage.PGconstructions=JSON.stringify(constructions)}catch(err){}PG.getConstruction(""),PG.loadConstruction(""),PG.loadConstructionList("")}},PG.dropVars=function(){localStorage.PGvars="",localStorage.PGels=""},PG.pullStoredElements=function(){var leftovers=[];for(var i in PG.els){"declaration"==PG.els[i].type?(PG.buildElementHtml(PG.els[i]),PG.buildBoardElement(PG.els[i])):leftovers.push(i)}for(var i in leftovers)PG.buildElementHtml(PG.els[leftovers[i]]),PG.buildBoardElement(PG.els[leftovers[i]])},PG.removeElement=function(id){PG.board.removeObject(PG.tmp[id]),delete PG.tmp[id],delete PG.els[id],$("#"+id).remove()},PG.pointToArray=function(point){var o=point.trim();return o=o.substr(1),o=o.substring(0,o.length-1),o.split(",")},PG.modalMessage=function(head,message){$("#modal-head").html(head),$("#modal-body").html(message),$("body").addClass("modal-shown")},PG.getMathScope=function(){var bb=PG.board.getBoundingBox(),o={n:PG.vars.n,xi:bb[0],xf:bb[2],yi:bb[3],yf:bb[1]},parserObj=PG.parser.getAll();for(var p in parserObj)o[p]===undefined&&(o[p]=parserObj[p]);return o},PG.declare=function(){PG.parser.clear();var decText=$("#declarations").val();PG.vars.declarations=decText;var decs=decText.split("\n");for(var i in decs)try{PG.parser.eval(decs[i])}catch(err){}PG.board.update()},PG.initBoard=function(){try{$("#elementList").empty(),$("#box").empty(),JXG.JSXGraph.freeBoard(PG.board)}catch(err){}$("#box").css({width:PG.vars.boardWidth,height:PG.vars.boardHeight}),PG.board=JXG.JSXGraph.initBoard("box",{boundingBox:[PG.vars.bounds[0],PG.vars.bounds[3],PG.vars.bounds[1],PG.vars.bounds[2]],axis:!1,showCopyright:!1,pan:{enabled:!0,needshift:!1},zoom:{factorX:1.25,factorY:1.25,needshift:!0,wheel:!0},showNavigation:!1}),PG.tmp.xaxis=PG.board.create("axis",[[0,0],[1,0]],{strokeColor:PG.vars.axesColor?"#"+PG.vars.axesColor:"#000000",strokeWidth:PG.vars.axesThickness?PG.vars.axesThickness:2,highlight:!1,name:PG.vars.xLabel,withLabel:!0,label:{position:"rt",offset:[5,10],highlight:!1,useMathJax:!0,anchorX:"right",anchorY:"bottom",fontSize:PG.vars.labelFontSize}}),PG.tmp.xaxis.removeAllTicks(),PG.tmp.xAxisTicks=PG.board.create("ticks",[PG.tmp.xaxis],{ticksDistance:PG.vars.ticksDistance[0],strokeColor:"rgba(150,150,150,0.85)",majorHeight:0==PG.vars.showYAxis&&1==PG.vars.showXAxis?15:-1,minorHeight:0==PG.vars.showYAxis&&1==PG.vars.showXAxis?10:-1,highlight:!1,drawLabels:!0,label:{offset:[0,-5],anchorY:"top",anchorX:"middle",highlight:!1,fontSize:PG.vars.labelFontSize},minorTicks:PG.vars.minorTicks[0],drawZero:0==PG.vars.showYAxis&&1==PG.vars.showXAxis,scale:PG.vars.piTicks?Math.PI:1,scaleSymbol:PG.vars.piTicks?"&pi;":""}),0===PG.vars.showXAxis&&PG.tmp.xaxis.setAttribute({visible:!1}),PG.tmp.yaxis=PG.board.create("axis",[[0,0],[0,1]],{strokeColor:PG.vars.axesColor?"#"+PG.vars.axesColor:"#000000",strokeWidth:PG.vars.axesThickness?PG.vars.axesThickness:2,highlight:!1,name:PG.vars.yLabel,withLabel:!0,label:{display:PG.vars.yLabelVertical?"internal":"html",rotate:PG.vars.yLabelVertical?90:0,position:"rt",offset:[10,5],highlight:!1,useMathJax:!0,anchorX:PG.vars.yLabelVertical?"right":"left",anchorY:"top",fontSize:PG.vars.labelFontSize}}),PG.tmp.yaxis.removeAllTicks(),PG.tmp.yAxisTicks=PG.board.create("ticks",[PG.tmp.yaxis],{ticksDistance:PG.vars.ticksDistance[1],strokeColor:"rgba(150,150,150,0.85)",majorHeight:-1,minorHeight:-1,highlight:!1,drawLabels:!0,label:{offset:[-5,0],anchorY:"middle",anchorX:"right",highlight:!1,fontSize:PG.vars.labelFontSize},minorTicks:PG.vars.minorTicks[1]}),0===PG.vars.showYAxis&&PG.tmp.yaxis.setAttribute({visible:!1}),PG.declare(),PG.pullStoredElements(),PG.registerBoxEvents()},PG.addNewElement=function(){var type=$("#newElementType").val();if(0==type)return PG.modalMessage("Whoops!","It looks like you forgot to choose an element type."),!1;var id=$("#newElementId").val().replace(/ /g,"");if(id=""===id?Math.random().toString(36).substring(2,8):id,PG.tmp[id])return PG.modalMessage("Woah there, Captain!","This element ID is already in use. Choose another one, please."),!1;switch($("#newElementType").val(0),$("#newElementId").val(""),PG.els[id]={id:id,type:type,panelShown:!0},type){case"functiongraph":PG.els[id].funcdef="x^2",PG.els[id].lowerBound="",PG.els[id].upperBound="",PG.els[id].strokeWidth=3,PG.els[id].strokeColor="000000",PG.els[id].dash=0;break;case"curve":PG.els[id].x="2*cos(t)",PG.els[id].y="2*sin(t)",PG.els[id].lowerBound="0",PG.els[id].upperBound="1",PG.els[id].strokeWidth=3,PG.els[id].strokeColor="FF0000",PG.els[id].dash=0;break;case"point":PG.els[id].loc="(1, 2)",PG.els[id].size=3,PG.els[id].name="",PG.els[id].color="000000";break;case"line":PG.els[id].startLoc="(0,0)",PG.els[id].endLoc="(2*cos(1), 2*sin(1))",PG.els[id].strokeWidth=3,PG.els[id].strokeColor="000000",PG.els[id].dash=0,PG.els[id].arrow=0,PG.els[id].ends=0,PG.els[id].visible=1;break;case"text":PG.els[id].loc="(1, 1)",PG.els[id].text="`Delta x`",PG.els[id].fontSize=PG.vars.globalFontSize,PG.els[id].anchorX=0,PG.els[id].anchorY=0,PG.els[id].color="0000FF";break;case"circle":PG.els[id].loc="(0,0)",PG.els[id].r=2,PG.els[id].strokeWidth=3,PG.els[id].strokeColor="000000",PG.els[id].fillColor="FFFFFF",PG.els[id].fillOpacity=0,PG.els[id].dash=0;break;case"polygon":PG.els[id].loc=["(1,1)","(xf, 1)","(0, yf)"],PG.els[id].strokeWidth=2,PG.els[id].strokeColor="000000",PG.els[id].fillColor="FFFFFF",PG.els[id].fillOpacity=0;break;case"inequality":PG.els[id].line="",PG.els[id].inverse=!1,PG.els[id].fillColor="FF0000",PG.els[id].fillOpacity=.3}PG.buildElementHtml(PG.els[id]),PG.buildBoardElement(PG.els[id]),PG.showStyles(id)},PG.buildElementHtml=function(ops){var os;switch(ops.type){case"functiongraph":os="\n                <li class='elementItem' id='"+(ops.id?ops.id:"needid")+"'>\n                    "+PG.generateElementTitle("Function Graph",ops.id)+"\n\n                        <li>y= <input type='text' class='element_funcDef' value='"+ops.funcdef+"' size='10'></li>\n                        <li>Lower Bound: <input type='text' class='element_funcLB' value='"+ops.lowerBound+"' size=5/></li>\n                        <li>Upper Bound: <input type='text' class='element_funcUB' value='"+ops.upperBound+"' size=5/></li>\n                    </ul>\n                </li>\n            ";break;case"curve":os="\n                <li class='elementItem' id='"+(ops.id?ops.id:"needid")+"'>\n                    "+PG.generateElementTitle("Curve",ops.id)+"\n\n                        <li>x(t): <input type='text' class='element_curveX' value='"+ops.x+"' size='12'></li>\n                        <li>y(t): <input type='text' class='element_curveY' value='"+ops.y+"' size='12'></li>\n                        <li>Lower Bound: <input type='text' class='element_funcLB' value='"+ops.lowerBound+"' size=5/></li>\n                        <li>Upper Bound: <input type='text' class='element_funcUB' value='"+ops.upperBound+"' size=5/></li>\n                    </ul>\n                </li>\n            ";break;case"point":os="\n                <li class='elementItem' id='"+(ops.id?ops.id:"needid")+"'>\n                    "+PG.generateElementTitle("Point",ops.id)+"\n\n                        <li>Location: <input type='text' class='element_pointLoc' size='12' value='"+ops.loc+"'/></li>\n                    </ul>\n                </li>\n            ";break;case"line":os="\n                <li class='elementItem' id='"+(ops.id?ops.id:"needid")+"'>\n                    "+PG.generateElementTitle("Line (Segment)",ops.id)+"\n\n                        <li>Start Location: <input type='text' class='element_segmentStartLoc' size=12 value='"+ops.startLoc+"'></li>\n                        <li>Ending Location: <input type='text' class='element_segmentEndLoc' size=12 value='"+ops.endLoc+"'></li>\n                    </ul>\n                </li>\n            ";break;case"text":os="\n                <li class='elementItem' id='"+(ops.id?ops.id:"needid")+"'>\n                    "+PG.generateElementTitle("Text",ops.id)+"\n\n                        <li>Text: <input type='text' class='element_text' size=15 value='"+ops.text+"'/></li>\n                        <li>Location: <input type='text' class='element_textLoc' size='12' value='"+ops.loc+"'/></li>\n                    </ul>\n                </li>\n            ";break;case"circle":os="\n                <li class='elementItem' id='"+(ops.id?ops.id:"needid")+"'>\n                    "+PG.generateElementTitle("Circle",ops.id)+"\n\n                        <li>Center: <input type='text' class='element_circleLoc' size=8 value='"+ops.loc+"'></li>\n                        <li>Radius: <input type='text' class='element_circleR' size='8' value='"+ops.r+"'/></li>\n                    </ul>\n                </li>\n            ";break;case"polygon":os="\n                <li class='elementItem' id='"+(ops.id?ops.id:"needid")+"'>\n                    "+PG.generateElementTitle("Polygon",ops.id)+"\n                        <li>Points: <ul>\n            ";for(var i in ops.loc)os+="\n                <li>\n                    <input type='text' size='8' value='"+ops.loc[i]+"' class='element_polygonPoint'/>\n                    <i class='fa fa-times deletePolygonPoint' aria-hidden='true'></i>\n                </li>\n                ";os+="\n                    <li><button type='button' class='polygonAddPoint'>Add Point</button></li>\n                </ul>\n            </li>",os+="\n                    </ul>\n                </li>\n            ";break;case"inequality":os="\n                <li class='elementItem' id='"+(ops.id?ops.id:"needid")+"'>\n                    "+PG.generateElementTitle("Inequality",ops.id)+"\n\n                        <li>Line: <input type='text' class='element_ineqLine' size=8 value='"+ops.line+"'></li>\n                        <li>Inverse: <input class='element_ineqInvert' type='checkbox' "+(ops.inverse?"checked":"")+" /></li>\n                    </ul>\n                </li>\n            "}$("ul#elementList").prepend(os)},PG.generateElementTitle=function(type,id){var msg="...";switch(type){case"Function Graph":msg="Enter a function definition, such as x^2 or sin(x). You can change the lower and upper bound of the domain of the function. If you leave the lower/upper bound inputs empty, the domain of the function will be all possible values.";break;case"Curve":msg="\n            <p>\n                This defines a parametric curve (x(t), y(t)) for a &le; t &le; b, where you can control a and b using the Lower Bound and Upper Bound properties. Here are a couple ways you might use the Curve element:\n            </p>\n            <ul>\n                <li><u>If you want to create an arc</u> on a circle with a radius of r, centered at (0,0), from the 3-o'clock position to an angle of &alpha;, you could define x(t) = r*cos(&alpha;*t) and y(t) = r*sin(&alpha;*t), where 0 &le; t &le; 1.</li>\n                <li>\n                    <u>If you want to create a segment</u> from (a, b) to (c, d), define x(t) = t*a + (1-t)*c and y(t) = t*b + (1-t)*d where 0 &le; t &le; 1\n                </li>\n            </ul>\n            ";break;case"Point":msg="\n            This defines a point at the location given. Use the form (X, Y) for the point location. You can also use expressions as the x and y coordinates, e.g. Location = (3*cos(1), 3*sin(1)).\n            ";break;case"Line (Segment)":msg="\n            <p>This line passes through the Starting and Ending locations.</p>\n            <p>By default, a line segment is formed. Use the &quot;Ending&quot; slider to turn the segment into a ray or a line.</p>\n            ";break;case"Circle":msg="\n            This defines a circle with a specified center and radius.\n            ";break;case"Polygon":msg="\n            <p>This defines a polygon. The order of the points in the list will be the order of the points when the polygon is drawn. You may use the following additional variables:</p>\n            <ul>\n                <li>n for the dynamic variable n</li>\n                <li>xi for the x-value of the left-side of the board</li>\n                <li>xf for the x-value of the right-side of the board</li>\n                <li>yi for the y-value of the bottom of the board</li>\n                <li>yf for the y-value of the top of the board</li>\n            </ul>\n            ";break;case"Inequality":msg="\n            This defines an &quot;inequality.&quot; Pass the ID of a previously defined line to the Line property, and the graph will be shaded below the line. Use the &quot;Inverse&quot; checkbox to shade above the line.\n            ";break;case"Text":msg="\n            <p>\n                This creates text at the given location. You can use LaTeX notation using $'s, such as $-\\frac{b}{2a}$. Or, ASCIIMath notation using backticks, like `(Delta y)/(Delta x)`.\n            </p>\n            <p>\n                You make computations by adding ${...}# in your string where ... is a computation and # is the number of digits to round to. For example, ${n/2}3 will compute n/2 and round to 3 decimal places and update as n varies.\n            </p>\n            "}return'\n    <p>\n        <i class="fa fa-times deleteItem" aria-hidden="true"></i>\n        '+type+": <span class='elId'>"+id+'</span>\n        <i class="fa fa-question-circle" aria-hidden="true" data-message="'+msg+'"></i>\n\n        <i class="fa '+(PG.els[id].panelShown?"fa-folder-open":"fa-folder")+' attribute-folder" aria-hidden="true"></i>\n    </p>\n    <ul '+(PG.els[id].panelShown?"":"style='display:none'")+">\n    "},PG.buildBoardElement=function(ops){var id=ops.id;try{PG.board.removeObject(PG.tmp[id])}catch(err){}try{switch(ops.type){case"functiongraph":var ats={fixed:!0,highlight:!1,strokeWidth:ops.strokeWidth?ops.strokeWidth:3,strokeColor:ops.strokeColor?"#"+ops.strokeColor:"#000000",dash:ops.dash?ops.dash:0};PG.tmp[id]=PG.board.create("functiongraph",[function(x){var s=PG.getMathScope();s.x=x;try{return math.eval(ops.funcdef,s)}catch(err){return 0}},ops.lowerBound?function(){try{return math.eval(ops.lowerBound,PG.getMathScope())}catch(err){return PG.getMathScope().xi}}:null,ops.upperBound?function(){try{return math.eval(ops.upperBound,PG.getMathScope())}catch(err){return PG.getMathScope().xf}}:null],ats);break;case"curve":PG.tmp[id]=PG.board.create("curve",[function(t){var s=PG.getMathScope();s.t=t;try{return math.eval(ops.x,s)}catch(err){return 0}},function(t){var s=PG.getMathScope();s.t=t;try{return math.eval(ops.y,s)}catch(err){return 0}},function(){try{return math.eval(ops.lowerBound,PG.getMathScope())}catch(err){return 0}},function(){try{return math.eval(ops.upperBound,PG.getMathScope())}catch(err){return 1}}],{fixed:!0,highlight:!1,strokeWidth:ops.strokeWidth,strokeColor:"#"+ops.strokeColor,dash:ops.dash});break;case"point":var loc=PG.pointToArray(PG.els[id].loc);PG.tmp[ops.id]=PG.board.create("point",[function(){try{return math.eval(loc[0],PG.getMathScope())}catch(err){return 0}},function(){try{return math.eval(loc[1],PG.getMathScope())}catch(err){return 0}}],{fixed:!1,name:ops.name?ops.name:"",highlight:!1,color:ops.color?"#"+ops.color:"#000000",showInfobox:!1,size:ops.size?ops.size:3}),PG.tmp[id].on("drag",function(){var x=this.X(),y=this.Y(),loc="("+x+", "+y+")";$("li#"+id).find(".element_pointLoc").val(loc),PG.els[id].loc=loc});break;case"line":var ats={fixed:!1,highlight:!1,strokeWidth:ops.strokeWidth?ops.strokeWidth:3,strokeColor:ops.strokeColor?"#"+ops.strokeColor:"#000000",dash:ops.dash?ops.dash:0,straightFirst:2==ops.end||3==ops.end,straightLast:1==ops.end||3==ops.end,firstArrow:2==ops.arrow||3==ops.arrow,lastArrow:1==ops.arrow||3==ops.arrow},s=PG.pointToArray(ops.startLoc),e=PG.pointToArray(ops.endLoc);PG.tmp[id]=PG.board.create("line",[function(){try{return[math.eval(s[0],PG.getMathScope()),math.eval(s[1],PG.getMathScope())]}catch(err){return[0,0]}},function(){try{return[math.eval(e[0],PG.getMathScope()),math.eval(e[1],PG.getMathScope())]}catch(err){return[1,1]}}],ats);break;case"text":var ats={highlight:!1,anchorX:-1==ops.anchorX?"right":0==ops.anchorX?"middle":"left",anchorY:-1==ops.anchorY?"top":0==ops.anchorY?"middle":"bottom",fontSize:ops.fontSize,color:"#"+ops.color,useMathJax:!0},textF=function(){var o=ops.text;return o=o.replace(/\$\{[^{}]+\}\d/g,function(x){return math.eval(x.substring(2,x.length-2),PG.getMathScope()).toFixed(x.charAt(x.length-1))})},loc=PG.pointToArray(ops.loc);-1==ops.loc.indexOf("n")&&-1==ops.loc.indexOf("x")?(PG.tmp[id]=PG.board.create("text",[math.eval(loc[0]),math.eval(loc[1]),textF],ats),PG.tmp[id].on("drag",function(){var x=this.X(),y=this.Y(),loc="("+x+", "+y+")";$("li#"+id).find(".element_textLoc").val(loc),PG.els[id].loc=loc})):PG.tmp[id]=PG.board.create("text",[function(){try{return math.eval(loc[0],PG.getMathScope())}catch(err){return 0}},function(){try{return math.eval(loc[1],PG.getMathScope())}catch(err){return 0}},textF],ats);break;case"circle":var ats={fixed:!0,highlight:!1,strokeWidth:ops.strokeWidth,strokeColor:"#"+ops.strokeColor,fillColor:"#"+ops.fillColor,fillOpacity:ops.fillOpacity,dash:ops.dash},s=PG.pointToArray(ops.loc);PG.tmp[id]=PG.board.create("circle",[[function(){try{return math.eval(s[0],PG.getMathScope())}catch(err){return 0}},function(){try{return math.eval(s[1],PG.getMathScope())}catch(err){return 0}}],function(){try{return math.eval(ops.r,PG.getMathScope())}catch(err){return 1}}],ats);break;case"polygon":for(var ps=[],_loop=function(i){var p=ops.loc[parseInt(i)].substr(0);p=PG.pointToArray(p),ps.push(function(){try{return[math.eval(p[0],PG.getMathScope()),math.eval(p[1],PG.getMathScope())]}catch(err){return[0,0]}})},i=0;i<ops.loc.length;i++)_loop(i);PG.tmp[id]=PG.board.create("polygon",ps,{fixed:!0,highlight:!1,vertices:{visible:!1},borders:{fixed:!0,highlight:!1,strokeWidth:ops.strokeWidth,strokeColor:"#"+ops.strokeColor},fillColor:"#"+ops.fillColor,fillOpacity:ops.fillOpacity});break;case"inequality":var ats={fixed:!0,highlight:!1,fillColor:"#"+ops.fillColor,fillOpacity:ops.fillOpacity,inverse:ops.inverse};PG.tmp[id]=PG.board.create("inequality",[PG.tmp[ops.line]],ats)}PG.tmp[id].on("down",PG.elementOnDown)}catch(err){}},PG.buildAestheticComponent=function(type,ops){switch(type){case"size":return"\n                Size: <input class='element_sizeRange long-range' type='range' min='1' max='9' step='1' value='"+(ops.size?ops.size:3)+"'>\n            ";case"name":return"\n                Name: <input class='element_nameInput' type='text' size=9 value='"+(ops.name?ops.name:"")+"' />\n            ";case"color":return'\n                Color: <input class="jscolor element_colorInput" value="'+(ops.color?ops.color:"black")+"\" size='8'>\n            ";case"strokeColor":return'\n                Stroke Color: <input class="jscolor element_strokeColorInput" value="'+(ops.strokeColor?ops.strokeColor:"000000")+"\" size='8'>\n            ";case"fillColor":return'\n                Fill Color: <input class="jscolor element_fillColorInput" value="'+(ops.fillColor?ops.fillColor:"FF0000")+"\" size='8'>\n            ";case"fillOpacity":return"\n                Fill Opacity: <input class='element_fillOpacity long-range' type='range' min='0' max='1' step='0.01' value='"+(ops.fillOpacity?ops.fillOpacity:0)+"' />\n            ";case"strokeWidth":return"\n                Stroke Width: <input class='element_strokeWidth long-range' type='range' min='0' max='7' step='1' value='"+(ops.strokeWidth?ops.strokeWidth:3)+"'/>\n            ";case"dash":return"\n                Dash: <input class='element_dash long-range' type='range' min='0' max='6' step='1' value='"+(ops.dash?ops.dash:0)+"'/>\n            ";case"arrow":return"\n                Arrow: <input class='element_arrow medium-range' type='range' min='0' max='3' step='1' value='"+(ops.arrow?ops.arrow:0)+"'/>\n            ";case"end":return"\n                Ending: <input class='element_end medium-range' type='range' min='0' max='3' step='1' value='"+(ops.end?ops.end:0)+"'/>\n            ";case"fontSize":return"\n                Font Size: <input class='element_fontSize' type='text' size='8' value='"+(ops.fontSize?ops.fontSize:18)+"'/>\n            ";case"anchorX":return"\n                Anchor (X): <input class='element_anchorX short-range' type='range' min='-1' max='1' step='1' value='"+(ops.anchorX!==undefined?ops.anchorX:0)+"'/>\n            ";case"anchorY":return"\n                Anchor (Y): <input class='element_anchorY short-range' type='range' min='-1' max='1' step='1' value='"+(ops.anchorY!==undefined?ops.anchorY:0)+"'/>\n            ";case"visible":return"\n                Visible: <input type='range' class='element_visible short-range' min='0' max='1' step='1' value='"+(ops.visible?ops.visible:1)+"'/>\n            "}},$(function(){localStorage.PGconstructions=localStorage.PGconstructions?localStorage.PGconstructions:"{}",localStorage.PGcurrentConstruction=localStorage.PGcurrentConstruction?localStorage.PGcurrentConstruction:"0",jscolor.installByClassName("jscolor"),PG.loadConstructionList(localStorage.PGcurrentConstruction),PG.getConstruction(localStorage.PGcurrentConstruction),PG.loadConstruction(localStorage.PGcurrentConstruction),PG.showStyles("")}),JXG.Options.layer={numlayers:20,text:9,point:9,glider:9,arc:8,line:9,circle:6,curve:7,turtle:5,polygon:3,sector:3,angle:3,integral:3,axis:7,ticks:2,grid:1,image:0,trace:0},JXG.Options.text.fontSize=20,$(function(){$("#tab-list>div").on("click",function(){$("#tab-list>div").removeClass("active-tab"),$(this).addClass("active-tab");var i=$("#tab-list>div").index($(this));$("#tabs>div").css("display","none"),$("#tabs>div:nth-child("+(i+1)+")").css("display","block")}),$(window).on("keydown",function(event){if(27==event.keyCode)$("body").removeClass("modal-shown");else if((event.ctrlKey||event.metaKey)&&13==event.keyCode)event.preventDefault(),PG.declare();else if(event.ctrlKey||event.metaKey)switch(String.fromCharCode(event.which).toLowerCase()){case"s":event.preventDefault(),PG.saveConstruction(),console.log("saved");break;case"d":event.preventDefault(),PG.deleteConstruction();break;case"p":event.preventDefault(),$("#playN").trigger("click")}}),$(document).on("focus","#elementList input",function(){var id=$(this).closest("li.elementItem").attr("id");PG.currentEl=id,PG.showStyles(id)}),$("#menubutton").on("click",function(){$("body").toggleClass("sidebar-shown")}),$("#content-overlay").on("click",function(){$("body").hasClass("modal-shown")?$("body").removeClass("modal-shown"):$("body").removeClass("sidebar-shown")}),$("#closeModal").on("click",function(){$("body").removeClass("modal-shown")}),$("#PGsaveConstruction").on("click",PG.saveConstruction),$("#PGdeleteConstruction").on("click",function(){PG.deleteConstruction()}),$("#sidebar").on("click",".fa-question-circle",function(){PG.modalMessage("Here, have some info!",$(this).attr("data-message")?$(this).attr("data-message"):"Looks like someone goofed and forgot to put info here...")}),$("#PGconstructionSelectList").on("change",function(){$(this).val();localStorage.PGcurrentConstruction=$(this).val();try{PG.getConstruction($(this).val()),PG.loadConstruction($(this).val())}catch(err){}}),$(".graphSize").on("change",function(){PG.vars.boardWidth=parseFloat($("#graphWidth").val()),PG.vars.boardHeight=parseFloat($("#graphHeight").val());try{$("#box").css({width:PG.vars.boardWidth,height:PG.vars.boardHeight}),PG.board.resizeContainer(PG.vars.boardWidth,PG.vars.boardHeight)}catch(err){console.log(err)}}),$(".graphBounds").on("change",function(){var xmin=parseFloat($("#graphxMin").val()),xmax=parseFloat($("#graphxMax").val()),ymin=parseFloat($("#graphyMin").val()),ymax=parseFloat($("#graphyMax").val());PG.vars.bounds=[xmin,xmax,ymin,ymax];try{PG.board.setBoundingBox([xmin,ymax,xmax,ymin],!1)}catch(err){console.log(err)}}),$(".ticksDistance").on("change",function(){var xTicksDistance=parseFloat($("#graphXTicksDistance").val()),yTicksDistance=parseFloat($("#graphYTicksDistance").val());PG.vars.ticksDistance=[xTicksDistance,yTicksDistance];try{PG.tmp.xAxisTicks.setAttribute({ticksDistance:PG.vars.ticksDistance[0]}),PG.tmp.yAxisTicks.setAttribute({ticksDistance:PG.vars.ticksDistance[1]})}catch(err){console.log(err)}}),$("#graphPiTicks").on("change",function(){var v=$(this).is(":checked");PG.vars.piTicks=v,PG.initBoard()}),$(".graphMinorTicks").on("change",function(){var xMinorTicks=parseFloat($("#graphXMinorTicks").val()),yMinorTicks=parseFloat($("#graphYMinorTicks").val());PG.vars.minorTicks=[xMinorTicks,yMinorTicks];try{PG.tmp.xAxisTicks.setAttribute({minorTicks:xMinorTicks}),PG.tmp.yAxisTicks.setAttribute({minorTicks:yMinorTicks})}catch(err){}}),$(".axisLabel").on("change",function(){var xLabel=$("#graphxLabel").val(),yLabel=$("#graphyLabel").val();PG.vars.xLabel=xLabel,PG.vars.yLabel=yLabel;try{PG.tmp.xaxis.setAttribute({name:PG.vars.xLabel}),PG.tmp.yaxis.setAttribute({name:PG.vars.yLabel})}catch(err){console.log(err)}}),$("#verticalyLabel").on("change",function(){PG.vars.yLabelVertical=$("#verticalyLabel").is(":checked"),PG.saveConstruction(),location.reload()}),$("#graphAxesThickness").on("input",function(){PG.vars.axesThickness=$(this).val(),PG.tmp.xaxis.setAttribute({strokeWidth:PG.vars.axesThickness}),PG.tmp.yaxis.setAttribute({strokeWidth:PG.vars.axesThickness})}),$("#graphAxesColor").on("change",function(){PG.vars.axesColor=$(this).val(),PG.tmp.xaxis.setAttribute({strokeColor:"#"+PG.vars.axesColor}),PG.tmp.yaxis.setAttribute({strokeColor:"#"+PG.vars.axesColor})}),$("#graphShowXAxis").on("input",function(){var show=parseInt($(this).val());PG.vars.showXAxis=show,PG.tmp.xaxis.setAttribute({visible:1==show}),PG.tmp.xAxisTicks.setAttribute({drawZero:0==PG.vars.showYAxis&&1==PG.vars.showXAxis,majorHeight:0==PG.vars.showYAxis&&1==PG.vars.showXAxis?15:-1,minorHeight:0==PG.vars.showYAxis&&1==PG.vars.showXAxis?10:-1})}),$("#graphShowYAxis").on("input",function(){var show=parseInt($(this).val());PG.vars.showYAxis=show,PG.tmp.yaxis.setAttribute({visible:1==show}),PG.tmp.xAxisTicks.setAttribute({drawZero:0==PG.vars.showYAxis&&1==PG.vars.showXAxis,majorHeight:0==PG.vars.showYAxis&&1==PG.vars.showXAxis?15:-1,minorHeight:0==PG.vars.showYAxis&&1==PG.vars.showXAxis?10:-1})}),$("#graphFontSize").on("change",function(){PG.vars.globalFontSize=parseFloat($("#graphFontSize").val()),PG.saveConstruction(),location.reload()}),$("#graphLabelFontSize").on("change",function(){var size=parseInt($(this).val());PG.vars.labelFontSize=size,PG.tmp.xaxis.label.setAttribute({fontSize:size});var xatl=PG.tmp.xAxisTicks.getAttribute("label");xatl.fontSize=size,PG.tmp.xAxisTicks.setAttribute({label:xatl}),PG.tmp.yaxis.label.setAttribute({fontSize:size});var yatl=PG.tmp.yAxisTicks.getAttribute("label");yatl.fontSize=size,PG.tmp.yAxisTicks.setAttribute({label:yatl})}),$("#n_slider").on("input",function(){$("#n_value").html($(this).val()),PG.setN(parseFloat($(this).val()))}),$("#n_slider").trigger("input"),$("#n_edit").on("click",function(){$("#n_bounds").slideToggle()}),$("#parameterN").on("change",function(){PG.setN(math.eval($(this).val()))}),$("#parameterN_min").on("change",function(){PG.vars.nMin=math.eval($(this).val()),$("#n_slider").attr("min",PG.vars.nMin)}),$("#parameterN_max").on("change",function(){PG.vars.nMax=math.eval($(this).val()),$("#n_slider").attr("max",PG.vars.nMax)}),$("#parameterN_step").on("change",function(){PG.vars.nStep=math.eval($(this).val()),$("#n_slider").attr("step",PG.vars.nStep)}),$("#parameterN_duration").on("change",function(){PG.vars.nDuration=math.eval($(this).val())}),$("#playN").on("click",function(){try{clearInterval(PG.nInterval)}catch(err){}var min=math.eval(PG.vars.nMin),max=math.eval(PG.vars.nMax),dur=1e3*parseFloat(PG.vars.nDuration),step=parseFloat(PG.vars.nStep);PG.setN(PG.vars.nMin),PG.nInterval=setInterval(function(){PG.setN(parseFloat(PG.vars.n)+step),parseFloat(PG.vars.n)>max-step&&(clearInterval(PG.nInterval),PG.setN(max))},dur/((max-min)/step))}),$("#declarations").on("change",PG.declare),$("#newElementAddButton").on("click",PG.addNewElement),$("#newElementId").on("keyup",function(e){13==e.which&&(PG.addNewElement(),$(this).blur())}),$("#newElementType").on("change",function(){0!=$(this).val()&&$("#newElementId").focus()}),$(document).on("click",".deleteItem",function(){var id=$(this).closest("li.elementItem").attr("id");PG.removeElement(id)}),$("#graphResetBoard").on("click",function(){confirm("Are you sure you want to reset all of the board settings and remove all elements?")&&(PG.dropVars(),location.reload())}),$("#graphSaveBoard").on("click",function(){PG.saveConstruction()}),$("#elementList").on("click",".attribute-folder",function(){var id=$(this).closest("li.elementItem").attr("id");$(this).toggleClass("fa-folder fa-folder-open"),PG.els[id].panelShown=$(this).hasClass("fa-folder-open"),$(this).closest("li.elementItem").find("ul").first().toggle()}),$("#elementList").on("change",".element_pointLoc",function(){var id=$(this).closest("li.elementItem").attr("id");PG.els[id].loc=$(this).val();PG.pointToArray($(this).val());PG.buildBoardElement(PG.els[id])}),$("#elementList").on("change",".element_segmentStartLoc, .element_segmentEndLoc",function(){var id=$(this).closest("li.elementItem").attr("id"),li=$("li#"+id),startLoc=li.find(".element_segmentStartLoc").val(),endLoc=li.find(".element_segmentEndLoc").val();PG.els[id].startLoc=startLoc,PG.els[id].endLoc=endLoc,PG.board.removeObject(PG.tmp[id]),PG.buildBoardElement(PG.els[id])}),$("#elementList").on("change",".element_funcDef",function(){var id=$(this).closest("li.elementItem").attr("id"),fd=$(this).val();PG.els[id].funcdef=fd,PG.board.removeObject(PG.tmp[id]),PG.buildBoardElement(PG.els[id]),PG.board.update()}),$("#elementList").on("change",".element_funcLB",function(){var id=$(this).closest("li.elementItem").attr("id");PG.els[id].lowerBound=$(this).val(),PG.board.removeObject(PG.tmp[id]),PG.buildBoardElement(PG.els[id]),PG.board.update()}),$("#elementList").on("change",".element_funcUB",function(){var id=$(this).closest("li.elementItem").attr("id");PG.els[id].upperBound=$(this).val(),PG.board.removeObject(PG.tmp[id]),PG.buildBoardElement(PG.els[id]),PG.board.update()}),$("#elementList").on("change",".element_curveX, .element_curveY",function(){var id=$(this).closest("li.elementItem").attr("id");$(this).hasClass("element_curveX")?PG.els[id].x=$(this).val():PG.els[id].y=$(this).val(),PG.board.removeObject(PG.tmp[id]),PG.buildBoardElement(PG.els[id]),PG.board.update()}),$("#elementList").on("change",".element_textLoc",function(){var id=$(this).closest("li.elementItem").attr("id");PG.els[id].loc=$(this).val(),PG.buildBoardElement(PG.els[id]),PG.board.update()}),$("#elementList").on("change",".element_text",function(){var id=$(this).closest("li.elementItem").attr("id"),text=$("li#"+id).find(".element_text").val();PG.els[id].text=text,PG.board.removeObject(PG.tmp[id]),PG.buildBoardElement(PG.els[id]),PG.board.update()}),$("#elementList").on("change",".element_circleLoc",function(){var id=$(this).closest("li.elementItem").attr("id");PG.els[id].loc=$(this).val(),PG.board.removeObject(PG.tmp[id]),PG.buildBoardElement(PG.els[id]),PG.board.update()}),$("#elementList").on("change",".element_circleR",function(){var id=$(this).closest("li.elementItem").attr("id"),r=$(this).val();PG.els[id].r=r,PG.board.removeObject(PG.tmp[id]),PG.buildBoardElement(PG.els[id]),PG.board.update()}),$("#elementList").on("change",".element_polygonPoint",function(){var id=$(this).closest("li.elementItem").attr("id"),n=$(this).closest("ul").find(".element_polygonPoint").index($(this));PG.els[id].loc[n]=$(this).val(),PG.board.removeObject(PG.tmp[id]),PG.buildBoardElement(PG.els[id]),PG.board.update()}),$("#elementList").on("click",".polygonAddPoint",function(){var id=$(this).closest("li.elementItem").attr("id"),defaultLoc="(0,0)";$(this).closest("ul").find("li").last().before("\n            <li>\n                <input type='text' size='8' value='"+defaultLoc+"' class='element_polygonPoint'/>\n                <i class='fa fa-times deletePolygonPoint' aria-hidden='true'></i>\n            </li>\n        "),PG.els[id].loc.push(defaultLoc),PG.board.removeObject(PG.tmp[id]),PG.buildBoardElement(PG.els[id]),PG.board.update()}),$("#elementList").on("click",".deletePolygonPoint",function(){var id=$(this).closest("li.elementItem").attr("id"),n=$(this).closest("ul").find(".deletePolygonPoint").index($(this));$(this).closest("ul").find("li:nth-child("+(n+1)+")").remove(),PG.els[id].loc.splice(n,1),PG.board.removeObject(PG.tmp[id]),PG.buildBoardElement(PG.els[id]),PG.board.update()}),$("#elementList").on("change",".element_ineqLine",function(){var id=$(this).closest("li.elementItem").attr("id"),line=$(this).val();PG.els[id].line=line,PG.board.removeObject(PG.tmp[id]),PG.buildBoardElement(PG.els[id]),PG.board.update()}),$("#elementList").on("change",".element_ineqInvert",function(){var id=$(this).closest("li.elementItem").attr("id"),inverse=$(this).is(":checked");PG.els[id].inverse=inverse,PG.board.removeObject(PG.tmp[id]),PG.buildBoardElement(PG.els[id]),PG.board.update()}),$("#style_size").on("input",function(){var id=PG.currentEl,size=$(this).val();PG.els[id].size=size,PG.tmp[id].setAttribute({size:size})}),$("#style_name").on("change",function(){var id=PG.currentEl,name=$(this).val();PG.els[id].name=name,PG.tmp[id].setAttribute({name:name})}),$("#style_color").on("change",function(){var id=PG.currentEl,color=$(this).val();PG.els[id].color=color,PG.tmp[id].setAttribute({color:"#"+color})}),$("#style_strokeColor").on("change",function(){var id=PG.currentEl,color=$(this).val();PG.els[id].strokeColor=color,PG.tmp[id].setAttribute({strokeColor:"#"+color});var borders=PG.tmp[id].borders;if(borders)for(var i in borders)borders[i].setAttribute({strokeColor:"#"+color})}),$("#style_strokeWidth").on("input",function(){var id=PG.currentEl,strokeWidth=$(this).val();PG.els[id].strokeWidth=strokeWidth,PG.tmp[id].setAttribute({strokeWidth:strokeWidth});var borders=PG.tmp[id].borders;if(borders)for(var i in borders)borders[i].setAttribute({strokeWidth:strokeWidth})}),$("#style_dash").on("input",function(){var id=PG.currentEl,dash=$(this).val();PG.els[id].dash=dash,PG.tmp[id].setAttribute({dash:dash})}),$("#style_arrow").on("input",function(){var id=PG.currentEl,arrow=$(this).val();PG.els[id].arrow=arrow,PG.tmp[id].setAttribute({firstArrow:2==arrow||3==arrow,lastArrow:1==arrow||3==arrow})}),$("#style_ends").on("input",function(){var id=PG.currentEl,end=$(this).val();PG.els[id].end=end,PG.tmp[id].setAttribute({straightFirst:2==end||3==end,straightLast:1==end||3==end})}),$("#style_fillColor").on("change",function(){var id=PG.currentEl,color=$(this).val();PG.els[id].fillColor=color,PG.tmp[id].setAttribute({fillColor:"#"+color})}),$("#style_fillOpacity").on("input",function(){var id=PG.currentEl,opac=$(this).val();PG.els[id].fillOpacity=opac,PG.tmp[id].setAttribute({fillOpacity:parseFloat(opac)}),PG.board.update()}),$("#style_fontSize").on("change",function(){var id=PG.currentEl,fontSize=parseInt($(this).val());PG.els[id].fontSize=fontSize,PG.tmp[id].setAttribute({fontSize:fontSize})}),$("#style_anchorX").on("input",function(){var id=PG.currentEl,val=$(this).val();PG.els[id].anchorX=val,PG.tmp[id].setAttribute({anchorX:-1==val?"right":0==val?"middle":"left"})}),$("#style_anchorY").on("input",function(){var id=PG.currentEl,val=$(this).val();PG.els[id].anchorY=val,PG.tmp[id].setAttribute({anchorY:-1==val?"top":0==val?"middle":"bottom"})}),$("#style_visible").on("input",function(){var id=PG.currentEl,visible=$(this).val();PG.els[id].visible=visible,PG.tmp[id].setAttribute({visible:0!=visible})})});
//# sourceMappingURL=main-dist.js.map